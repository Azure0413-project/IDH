from django.db import models

# Create your models here.
class Patient(models.Model):
    p_id = models.IntegerField(primary_key=True)
    p_name = models.CharField(max_length=10)

class Record(models.Model):
    r_id = models.AutoField(primary_key=True)
    p_id = models.ForeignKey(Patient, on_delete=models.CASCADE)
    name = models.CharField(max_length=10)
    gender = models.CharField(max_length=2)
    birth = models.DateField()
    age = models.IntegerField()
    times = models.IntegerField()
    start_time = models.DateTimeField()
    end_time = models.DateTimeField()
    record_time = models.DateTimeField()
    machine_id = models.CharField(max_length=10)
    bed = models.CharField(max_length=10)
    temperature = models.DecimalField(decimal_places=2, max_digits=4, blank=True)
    start_temperature = models.DecimalField(decimal_places=2, max_digits=4, blank=True)
    before_weight = models.DecimalField(decimal_places=3, max_digits=5, blank=True)
    ideal_weight = models.DecimalField(decimal_places=3, max_digits=5, blank=True)
    expect_dehydration = models.DecimalField(decimal_places=3, max_digits=5)
    transfusion = models.DecimalField(decimal_places=3, max_digits=5)
    food = models.DecimalField(decimal_places=3, max_digits=5)
    estimate_dehydration = models.DecimalField(decimal_places=3, max_digits=5)
    set_dehydration = models.DecimalField(decimal_places=3, max_digits=5)
    after_weight = models.DecimalField(decimal_places=3, max_digits=5, blank=True)
    real_dehydration = models.DecimalField(decimal_places=3, max_digits=5, blank=True)
    start_SBP = models.IntegerField()
    start_DBP = models.IntegerField()
    end_SBP = models.IntegerField()
    end_DBP = models.IntegerField()
    mode = models.CharField(max_length=10)
    machine = models.CharField(max_length=10)
    start_flow_speed = models.IntegerField()
    start_blood_speed = models.IntegerField()
    Ca = models.IntegerField()
    conductivity = models.DecimalField(decimal_places=2, max_digits=4, blank=True)
    channel = models.CharField(max_length=50)
    heparin = models.CharField(max_length=50)
    ESA = models.CharField(max_length=50, blank=True)
    coagulation = models.CharField(max_length=20)
    SBP = models.IntegerField()
    DBP = models.IntegerField()
    pulse = models.IntegerField()
    breath = models.IntegerField()
    blood_speed = models.IntegerField()
    flow_speed = models.IntegerField()
    CVP = models.IntegerField()
    DP = models.IntegerField()
    TMP = models.IntegerField()
    dehydrate_speed = models.DecimalField(decimal_places=2, max_digits=4)
    accumulation = models.DecimalField(decimal_places=2, max_digits=4)
    dialyse_temperature = models.DecimalField(decimal_places=2, max_digits=4)
    heparin_volume = models.DecimalField(decimal_places=2, max_digits=4)
    flush = models.IntegerField(blank=True)
    channel_confirmed = models.BooleanField()